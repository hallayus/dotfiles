# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ 
      (modulesPath + "/installer/scan/not-detected.nix")
      <nixos-hardware/microsoft/surface/surface-laptop-amd>
    ];  

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" "amdgpu" ];
  boot.kernelParams = [ "amd_iommu=off" "iommu=off" ];
  boot.kernelModules = [ ];
  boot.initrd.kernelModules = [ ];
  boot.extraModulePackages = [ ];
    
  # microsoft-surface.kernelVersion = lib.mkForce "6.1.55";

  services.xserver.videoDrivers = [ "modesetting" ];    
  hardware.opengl.enable = true; 
  hardware.opengl.driSupport32Bit = true;  

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/e8846108-f3f2-441f-943d-bd25fe92af25";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/5CD2-B7F2";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
